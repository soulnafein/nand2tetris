// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address, a=loadA, b=loadB, c=loadC, d=loadD, e=loadE, f=loadF, g=loadG, h=loadH);
    Register(in=in, out=a, load=loadA);
    Register(in=in, out=b, load=loadB);
    Register(in=in, out=c, load=loadC);
    Register(in=in, out=d, load=loadD);
    Register(in=in, out=e, load=loadE);
    Register(in=in, out=f, load=loadF);
    Register(in=in, out=g, load=loadG);
    Register(in=in, out=h, load=loadH);
    Mux8Way16(a=a, b=b, c=c, d=d, e=e, f=f, g=g, h=h, sel=address, out=out);
}
